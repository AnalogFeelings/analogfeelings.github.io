<html>

<head>
    <link rel=stylesheet href=../css/commands.css type=text/css>
</head>

<body>
    <h1>Function name</h1>
    <h1>Parameters</h1>
    <table>
        <tr>
            <td>
                name = any valid name text that is not a keyword of Blitz.
            </td>
        </tr>
    </table>
    <h1>Description</h1>
    <table>
        <tr>
            <td>
                A function is a routine of commands you may choose to call frequently within your program. Functions are
                considered 'proper' practice in this situation, instead of using GOSUB commands.

                <br />

                <br />
                Functions are independant of your 'main code' and will only execute if they are called. They have their
                own namespace, and variables created outside a function are NOT available within the function (this goes
                for TYPE structures as well) unless you declare the variable or Type structure as GLOBAL.

                <br />

                <br />
                You can pass variables into functions, as well as RETURN values back to the calling code. To return
                floats or strings from a function ensure your function name has a # or $ suffix.

                <br />

                <br />
                The practical use of functions is to help seperate your code into managable chunks for subsequent
                perfection of a routine. You may put all your screen updates into a single function, for example. Or
                perhaps your scoring system where you pass it what alien has been destroyed and it updates the player's
                score.

                <br />

                <br />
                Once the function reaches the END FUNCTION command, it returns program execution to the point
                immediately following the function call.

                <br />

                <br />
                Functions can be a bit daunting until you realize they really are their own little programs within your
                program. See the example for more.

                <br />

                <br />
                Note that if you want to be really clever, you can replace Blitz functions with your own function. This
                can be useful if you wish to add some error handling or additional processing around every instance of a
                Blitz function. Note that once you have replaced a Blitz function, you cannot call the real function -
                for example you cannot wrap a LoadImage command within a LoadImage function as it will recursively call
                itself!
                <br>
                <br>
                See also: <a class=small href=End Function.htm>End Function</a>, <a class=small
                    href=Return.htm>Return</a>, <a class=small href=Gosub.htm>Gosub</a>, <a class=small
                    href=Goto.htm>Goto</a>.
            </td>
        </tr>
    </table>
    <h1><a href=../2d_examples/Function.bb>Example</a></h1>
    <table>
        <tr>
            <td>
                ; Function Example
                <br />

                <br />
                ; Get the user's name
                <br />
                name$=Input$("Enter Your Name:")
                <br />

                <br />
                ; Call a function to print how many letters the name has
                <br />
                numletters(name$);
                <br />

                <br />
                ; Let's get something BACK from the function
                <br />
                thefirst$=firstletter(name$)
                <br />

                <br />
                ; Now print results
                <br />
                Print "Was the first letter an 'S'? (1=True/0=False)" + thefirst$
                <br />

                <br />
                ;The program basically ends here, because functions don't run unless called.
                <br />

                <br />
                ; The actual function
                <br />
                Function numletters(passedname$)
                <br />
                Print "Your name has " + Len(passedname$) + " letters in it."
                <br />
                End Function
                <br />

                <br />
                ; Function to see if the first letter is S
                <br />
                Function firstletter(passedname$)
                <br />

                <br />
                ; If the first letter is an 'S' then return from the function a true value
                <br />
                If Left$(passedname$,1) = "S" Then
                <br />
                Return True
                <br />

                <br />
                ; Otherwise, return false
                <br />
                Else
                <br />

                <br />
                Return False
                <br />

                <br />
                End If
                <br />
                End Function
            </td>
        </tr>
    </table>
    <br>
    <a target=_top href=../index.htm>Index</a><br>
</body>

</html>