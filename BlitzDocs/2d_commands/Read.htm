<html>

<head>
    <link rel=stylesheet href=../css/commands.css type=text/css>
</head>

<body>
    <h1>Read variable</h1>
    <h1>Parameters</h1>
    <table>
        <tr>
            <td>
                variable = valid variable to match the data type you are reading (integer, string, etc)
            </td>
        </tr>
    </table>
    <h1>Description</h1>
    <table>
        <tr>
            <td>
                This reads the next value in a set of Data statements. This allows you to store large blocks of constant
                information (the structure of tile blocks for a game level for example) into easy to maintain Data
                statements, then retrieve them for redrawing, etc.
                <br />

                <br />

                <br />
                Unlike most BASIC languages, Data statments do not have to be linear and sequential. Through the use of
                Labels (aka 'dot variable') you can create 'banks' of Data statments with the unique ability to 'Restore
                the Data pointer' to any one of these labels. Each level could have its own label (.level1, .level2,
                etc). See the Data statement, Restore command, or .Label command for more information.
                <br />

                <br />

                <br />
                Note: You can read multiple values at one time; Read X,Y,Z for example.
                <br>
                <br>
                See also: <a class=small href=Data.htm>Data</a>, <a class=small href=Restore.htm>Restore</a>.
            </td>
        </tr>
    </table>
    <h1><a href=../2d_examples/Read.bb>Example</a></h1>
    <table>
        <tr>
            <td>
                ; Sample of read/restore/data/label commands
                <br />

                <br />
                ; Let's put the data pointer to the second data set
                <br />
                Restore seconddata
                <br />

                <br />
                ; Let's print them all to the screen
                <br />
                For t = 1 To 10
                <br />
                Read num ; Get the next data value in the data stack
                <br />
                Print num
                <br />
                Next
                <br />

                <br />
                ; Now for the first set of data
                <br />
                Restore firstdata
                <br />

                <br />
                ; Let's print them all to the screen
                <br />
                For t = 1 To 10
                <br />
                Read num ; Get the next data value in the data stack
                <br />
                Print num
                <br />
                Next
                <br />

                <br />
                ; this is the first set of data
                <br />
                .firstdata
                <br />
                Data 1,2,3,4,5,6,7,8,9,10
                <br />

                <br />
                ; this is the second set of data
                <br />
                .seconddata
                <br />
                Data 11,12,13,14,15,16,17,18,19,20
            </td>
        </tr>
    </table>
    <br>
    <a target=_top href=../index.htm>Index</a><br>
</body>

</html>